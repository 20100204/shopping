<?php
namespace app\modules\admin\models;

use Yii;

class AdminUser extends \yii\db\ActiveRecord
{
    public $rememberMe = true;
    public $repass;

    public static function tableName()
    {
        return "{{%adminuser}}"; // TODO: Change the autogenerated stub
    }

    public function login($data)
    {
        if ($this->load($data) && $this->validate()) {
            //做点有意义的事，记录日志
            $lifeTime = $this->rememberMe ? time() + 3600 * 24 : 0;
            Yii::$app->session;
            session_set_cookie_params($lifeTime);//设置cookie在客户端的存储时间
            $session['adminuser'] = [
                'adminuser' => $this->adminuser,
                'isLogin' => 1,
            ];
            $this->updateAll(['logintime' => time(), 'loginip' => ip2long(Yii::$app->request->userIP)], 'adminuser=:user and adminpass=:pass', [':user' => $this->adminuser, ':pass' => md5($this->adminpass)]);
            return (bool)$session['adminuser']['isLogin'];
        }

        return false;

    }

    public function seekPasswd($data)
    {

        if ($this->load($data) && $this->validateEmail()) {
            //做点有意义的事；调到填写密码页面

            //发送邮件
            $mailer = Yii::$app->mailer->compose('seekpass/seekpass',['data'=>['user'=>$this->adminuser],'token'=>$this->createToken($this->adminuser)]);
            $mailer->setFrom('13713851213@163.com');
            $mailer->setTo($data['AdminUser']['adminemail']);
            $mailer->setSubject('找回密码');
            if($mailer->send()){
             //   $session = Yii::$app->session;
                /*$session['adminuser']=[
                    'adminuser'=>$this->adminuser,
                    'adminemail'=>$this->adminemail,
                ];*/
               // $session->setFlash('info','邮件发送成功');
                return true;
            }

            
        }
        return false;
    }
    public function createToken($data){
        return $data;
    }

    public function validateEmail(){

        if(!$this->hasErrors()){
            $data = self::find()->where('adminuser=:user and adminemail=:email',[':user'=>$this->adminuser,':email'=>$this->adminemail])->one();

            if(is_null($data)){

                $this->addError('adminemail','用户名或邮箱错误');
                return false;
            }
            return true;

        }
    }
    public function rules()
    {
        return [
            ['adminuser', 'required', 'message' => '用户名不能为空','on'=>['login','seek','repass']],
            ['adminpass', 'required', 'message' => '密码不能为空', 'on' => ['login','repass']],
            ['rememberMe', 'boolean','on'=>'login'],
            ['adminpass', 'validatePass','on'=>'login'],
            ['adminemail', 'required', 'message' => '邮箱不能为空', 'on' => 'seek'],
            ['adminemail', 'email', 'message' => '邮箱格式不争取', 'on' => 'seek'],
            ['adminemail', 'validateEmail','on'=>'seek'],
            ['repass','required','message'=>'还没有确认密码','on'=>'repass'],
            ['repass','compare','compareAttribute'=>'adminpass','message'=>'密码不一致','on'=>'repass']
        ];
    }


    public function changePass($data){
        if($this->load($data) && $this->validate()){
           
            if($this->updateAll(['adminpass'=>md5($this->adminpass)],'adminuser=:user',[':user'=>$this->adminuser])){
                return true;
            }
        }
    }

    public function validatePass()
    {
        if (!$this->hasErrors()) {
            $data = self::find()->where('adminuser=:user and adminpass=:pass', [':user' => $this->adminuser, ':pass' => md5($this->adminpass)])->one();
            if (is_null($data)) {
                $this->addError('adminpass', '用户名或密码不正确');
                return false;
            }
            return true;
        }
    }
}